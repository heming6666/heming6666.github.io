<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>搜索查找算法 on 8898 写字的地方</title><link>https://heming6666.github.io/docs/algorithm/search/</link><description>Recent content in 搜索查找算法 on 8898 写字的地方</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://heming6666.github.io/docs/algorithm/search/index.xml" rel="self" type="application/rss+xml"/><item><title>二分查找</title><link>https://heming6666.github.io/docs/algorithm/search/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://heming6666.github.io/docs/algorithm/search/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</guid><description>二分查找 # 1、有序数组，查找一个数搜索一个数，如果存在，返回其索引，否则返回 -1。 # int binarySearch(vector&amp;lt;int&amp;gt;&amp;amp; nums, int target) { int left = 0; int right = nums.size() - 1; // 注意 while(left &amp;lt;= right) { int mid = left + (right - left) / 2; if (nums[mid] &amp;lt; target) left = mid + 1; // 注意 else if (nums[mid] &amp;gt; target) right = mid - 1; // 注意 else if(nums[mid] == target) return mid; } return -1; } 1、为什么 while 循环的条件中是 &amp;lt;=，而不是 &amp;lt;？ # 答：因为初始化right的赋值是nums.</description></item><item><title>BFS广度优先搜索</title><link>https://heming6666.github.io/docs/algorithm/search/bfs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://heming6666.github.io/docs/algorithm/search/bfs/</guid><description>BFS广度优先搜索 # 一、二叉树的层序遍历 # 102.二叉树的层序遍历 # 题目地址：https://leetcode-cn.com/problems/binary-tree-level-order-traversal/
给你一个二叉树，请你返回其按 层序遍历 得到的节点值。 （即逐层地，从左到右访问所有节点）。
107.二叉树的层次遍历 II # 题目链接：https://leetcode-cn.com/problems/binary-tree-level-order-traversal-ii/
给定一个二叉树，返回其节点值自底向上的层次遍历。 （即按从叶子节点所在层到根节点所在的层，逐层从左向右遍历）
相对于102.二叉树的层序遍历，就是最后把result数组反转一下就可以了。 199.二叉树的右视图 # 题目链接：https://leetcode-cn.com/problems/binary-tree-right-side-view/
给定一棵二叉树，想象自己站在它的右侧，按照从顶部到底部的顺序，返回从右侧所能看到的节点值。
层序遍历的时候，判断是否遍历到单层的最后面的元素 637.二叉树的层平均值 # 题目链接：https://leetcode-cn.com/problems/average-of-levels-in-binary-tree/
给定一个非空二叉树, 返回一个由每层节点平均值组成的数组。
层序遍历的时候把一层求个总和在取一个均值。 429.N叉树的层序遍历 # 题目链接：https://leetcode-cn.com/problems/n-ary-tree-level-order-traversal/
给定一个 N 叉树，返回其节点值的层序遍历。 (即从左到右，逐层遍历)。
多个孩子 for (int i = 0; i &amp;lt; node-&amp;gt;children.size(); i++) { // 将节点孩子加入队列 if (node-&amp;gt;children[i]) que.push(node-&amp;gt;children[i]); } 515.在每个树行中找最大值 # 题目链接：https://leetcode-cn.</description></item></channel></rss>